<?
  include_once ("../../../lib/inc.php");

  // try to find the work in the database

  $work = openopusdownparse ("work/detail/{$_REQUEST["id"]}.json");

  if (!$work)
  {
    // if the work doesn't exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"Work not found");
  }
  else
  {
    // work exists

    $apireturn["work"] = $work["work"];
    $apireturn["work"]["composer"] = $work["composer"];

    $apireturn["status"]["source"] = "ext";

    // searching spotify

    $wid = $work["work"]["id"];
    $ii = -1;

    $spot = fetchspotify ($work, "albums", $_REQUEST["market"], $_REQUEST["offset"], $_REQUEST["pagelimit"]);

    $allperfs = [];

    foreach ($spot["items"] as $spotalb => $spalb)
    {
      $allperfs = array_merge ($allperfs, end($spalb)["performers"]);
    }

    // guessing the performers

    $perfs = openopusdownparse ("dyn/performer/list/", ["names"=>json_encode ($allperfs)]);
    $rldb = $perfs["performers"]["digest"];

    // adding extradata to spotify results

    $spot = extradata ($spot, Array ("wid"=>$_REQUEST["id"]));

    // preparing data 

    $spotres = $spot["items"];

    foreach ($spotres as $kalb => $salb)
    {
      $ii = $ii + 1;
      $alb = end($salb);

      $return[$ii] = Array
        (
          "year" => explode ("-", $alb["year"])[0],
          "cover" => $alb["spotify_imgurl"],
          "spotify_albumid" => $alb["spotify_albumid"],
          "singletrack" => ($alb["tracks"] > 1) ? "false" : "true",
          "compilation" => $alb["compilation"] ? "true" : "false",
          "observation" => $alb["observation"],
          "performers" => ($alb["extraperformers"]) ? orderperformers ($alb["extraperformers"]) : allperformers ($alb["performers"], $rldb, $apireturn["work"]["composer"]["complete_name"]),
          "set" => ($alb["subset"]) ? intval ($alb["subset"]) : 1,
          "historic" => $alb["historic"] ? "true" : "false",
          "verified" => $alb["verified"] ? "true" : "false",
          "recommended" => $alb["recommended"] ? "true" : "false"
        );

        if ($alb["verified"])
        {
          $vreturn[$ii] = $return[$ii];
          unset ($return[$ii]);
        }
    }

    $apireturn["recordings"] = (sizeof ($vreturn) ? array_merge ($vreturn, $return) : $return);
    
    if ($spot["extras"]["next"]) 
    {
      parse_str (parse_url ($spot["extras"]["next"])["query"], $next);
      $apireturn["next"] = $next["offset"];
    }

    // compilation detection

    if (isset ($apireturn["recordings"]))
    {
      $apireturn["status"] = Array ("success"=>"true", "stats"=> $spot["stats"]);
      $apireturn = compilationdigest ($apireturn, false, true);
    }
    else
    {
      $apireturn["status"] = Array ("success"=>"false", "error"=>"No recordings found", "stats"=> $spot["stats"]);
      unset ($apireturn["recordings"]);
    }
  }

  if ($_REQUEST["market"])
  {
    echo savecache ("/recording/{$_REQUEST["market"]}/list/work/{$_REQUEST["id"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
  }
  else
  {
    echo savecache ("/recording/list/work/{$_REQUEST["id"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
  }