<?
  include_once ("../../../../lib/inc.php");

  // try to find the recording

  $recordings = mysqlfetch ($mysql, "select concat(recording.work_id,'-',recording.spotify_albumid,'-',recording.subset) as id, recording.observation as observation, recording.verified, recording.subset, recording.spotify_albumid, recording.work_id as work, spotify_imgurl as cover, performer, role from recording, recording_performer, user_recording where user_recording.user_id = '{$_REQUEST["id"]}' and user_recording.work_id = recording.work_id and user_recording.spotify_albumid = recording.spotify_albumid and user_recording.subset = recording.subset and recording_performer.work_id = recording.work_id and recording_performer.subset = recording.subset and recording_performer.spotify_albumid = recording.spotify_albumid and user_recording.favorite = 1 order by work asc, recording.spotify_albumid asc, recording.subset asc");

  if (!$recordings)
  {
    // if there are no recordings, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"No recordings found");
  }
  else
  {
    // recordings exist, list

    // open opus api call

    foreach ($recordings as $rec)
    {
      $worklist[] = $rec["work"];
    }

    $obworks = openopusdownparse ("work/list/{$_REQUEST["cid"]}/ids/". implode (",", array_unique ($worklist)). ".json");

    foreach ($recordings as $rec)
    {
      if ($lastid != $rec["id"])
      {
        $id = $id + 1;
        $vid = slug ($obworks["works"]["w:". $rec["work"]]["composer"]["name"]. "-". $obworks["works"]["w:". $rec["work"]]["title"]. "-". $id);
        
        $apireturn["recordings"][$vid] = Array
          (
            "spotify_albumid" => $rec["spotify_albumid"],
            "set" => (String) $rec["subset"],
            "cover" => $rec["cover"],
            "observation" => $rec["observation"],
            "verified" => $rec["verified"]
          );
      }

      $apireturn["recordings"][$vid]["performers"][] = Array ("name"=>$rec["performer"],"role"=>$rec["role"]);
      $apireturn["recordings"][$vid]["work"] = Array
        (
          "composer"=>Array
            (
              "id"=>$obworks["works"]["w:". $rec["work"]]["composer"]["id"],
              "name"=>$obworks["works"]["w:". $rec["work"]]["composer"]["name"],
              "epoch"=>$obworks["works"]["w:". $rec["work"]]["composer"]["epoch"]
            ),
           "id"=>$rec["work"],
           "title"=>$obworks["works"]["w:". $rec["work"]]["title"],
           "genre"=>$obworks["works"]["w:". $rec["work"]]["genre"],
        );

      $lastid = $rec["id"];
    }

    $apirecordings = $apireturn["recordings"];
    ksort ($apirecordings);
    $apireturn["recordings"] = array_values ($apirecordings);
  }

  if (isset ($apireturn["recordings"]))
  {
    $apireturn["status"]["rows"] = sizeof ($apireturn["recordings"]);
    $apireturn["works"] = $obworks["abstract"];
    
    foreach ($apireturn["recordings"] as $rec)
    {
      $apireturn["list"][] = $rec["work"]["id"]. "-". $rec["spotify_albumid"]. "-". $rec["set"];
    }
  }

  echo savecache ("/user/{$_REQUEST["id"]}/recording/fav.json", apireturn ($apireturn));
